import React from 'react';
import {
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Button,
  Typography,
  Box,
  Card,
  CardContent,
  Chip,
  Divider,
  Grid
} from '@mui/material';
import { Product, ProductVariation } from '../types/Product';

interface VariationModalProps {
  open: boolean;
  product: Product | null;
  onClose: () => void;
  onSelectVariation: (variation: ProductVariation) => void;
}

const VariationModal: React.FC<VariationModalProps> = ({
  open,
  product,
  onClose,
  onSelectVariation
}) => {
  if (!product) return null;

  const handleVariationSelect = (variation: ProductVariation) => {
    onSelectVariation(variation);
    onClose();
  };

  return (
    <Dialog 
      open={open} 
      onClose={onClose}
      maxWidth="md"
      fullWidth
      PaperProps={{
        sx: {
          borderRadius: 2,
          minHeight: '60vh'
        }
      }}
    >
      <DialogTitle sx={{ 
        bgcolor: 'primary.main', 
        color: 'white',
        display: 'flex',
        alignItems: 'center',
        gap: 1
      }}>
        <Typography variant="h6">
          Choisir une déclinaison
        </Typography>
        <Chip 
          label={`${product.variations.length} option${product.variations.length > 1 ? 's' : ''}`}
          size="small"
          sx={{ bgcolor: 'rgba(255,255,255,0.2)', color: 'white' }}
        />
      </DialogTitle>

      <DialogContent sx={{ p: 3 }}>
        {/* Informations du produit */}
        <Box sx={{ mb: 3, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>
          <Typography variant="h6" gutterBottom>
            {product.name}
          </Typography>
          <Typography variant="body2" color="text.secondary">
            Catégorie: {product.category}
          </Typography>
          <Typography variant="body2" color="text.secondary">
            Référence: {product.reference}
          </Typography>
        </Box>

        <Divider sx={{ mb: 3 }} />

        {/* Grille des déclinaisons */}
        <Typography variant="h6" gutterBottom>
          Déclinaisons disponibles:
        </Typography>
        
        <Grid container spacing={2}>
          {product.variations.map((variation) => (
            <Grid item xs={12} sm={6} md={4} key={variation.id}>
              <Card 
                sx={{ 
                  cursor: 'pointer',
                  transition: 'all 0.2s',
                  '&:hover': {
                    transform: 'translateY(-2px)',
                    boxShadow: 3
                  }
                }}
                onClick={() => handleVariationSelect(variation)}
              >
                <CardContent sx={{ textAlign: 'center', p: 2 }}>
                  {/* Attributs (taille, couleur, etc.) */}
                  <Chip 
                    label={variation.attributes}
                    color="primary"
                    variant="outlined"
                    sx={{ mb: 2 }}
                  />
                  
                  {/* Prix */}
                  <Typography variant="h5" color="primary" gutterBottom>
                    {variation.finalPrice.toFixed(2)} €
                  </Typography>
                  
                  {/* Impact sur prix */}
                  {variation.priceImpact !== 0 && (
                    <Typography variant="body2" color="text.secondary">
                      {variation.priceImpact > 0 ? '+' : ''}{variation.priceImpact.toFixed(2)} €
                    </Typography>
                  )}
                  
                  {/* EAN13 si disponible */}
                  {variation.ean13 && (
                    <Typography variant="caption" color="text.secondary" display="block">
                      EAN: {variation.ean13}
                    </Typography>
                  )}
                  
                  {/* Référence si disponible */}
                  {variation.reference && (
                    <Typography variant="caption" color="text.secondary" display="block">
                      Ref: {variation.reference}
                    </Typography>
                  )}
                </CardContent>
              </Card>
            </Grid>
          ))}
        </Grid>
      </DialogContent>

      <DialogActions sx={{ p: 3, pt: 0 }}>
        <Button onClick={onClose} variant="outlined">
          Annuler
        </Button>
      </DialogActions>
    </Dialog>
  );
};

export default VariationModal; 